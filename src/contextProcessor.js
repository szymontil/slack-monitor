const { analyzeContextWithOpenAI } = require('./openAI');
const { addTaskToTodoist, verifyTodoistConnection } = require('./todoist');
const { createEmailDraft } = require('./createEmailDraft');

async function processContext(context) {
    const fullContext = context.messages.join('\n');
    console.log('\nüîÑ Rozpoczynam przetwarzanie kontekstu...');
    console.log('üìú Pe≈Çny kontekst:', fullContext);

    try {
        const todoistConnected = await verifyTodoistConnection();
        if (!todoistConnected) {
            throw new Error('Nie mo≈ºna po≈ÇƒÖczyƒá siƒô z Todoist');
        }

        console.log('\nü§ñ Wysy≈Çam kontekst do analizy...');
        const analysis = await analyzeContextWithOpenAI(fullContext);
        console.log('\nüìä Otrzymana analiza:', JSON.stringify(analysis, null, 2));

        if (analysis && analysis.is_task === "no") {
            console.log('‚ÑπÔ∏è Brak zada≈Ñ do wykonania');
            return;
        }

        if (Array.isArray(analysis)) {
            if (analysis.length === 0) {
                console.log('‚ÑπÔ∏è Otrzymano pustƒÖ listƒô zada≈Ñ');
                return;
            }

            console.log(`\n‚úÖ Znaleziono ${analysis.length} zadanie(-a/-≈Ñ)`);
            
            for (const task of analysis) {
                console.log('\nüìå Przetwarzam zadanie:');
                console.log('   Typ:', task.task_type);
                console.log('   Tytu≈Ç:', task.task_title);
                console.log('   Pe≈Çne dane zadania:', JSON.stringify(task, null, 2));

                try {
                    if (task.task_type === "action") {
                        console.log('\nüöÄ Wysy≈Çam zadanie do Todoist...');
                        const result = await addTaskToTodoist(task.task_title);
                        console.log('‚úÖ Odpowied≈∫ z Todoist:', JSON.stringify(result, null, 2));
                    } else if (task.task_type === "e-mail") {
                        console.log('\n‚úâÔ∏è Tworzƒô szkic e-maila...');
                        // Logika e-mail pozostaje bez zmian
                    } else {
                        console.log(`‚ö†Ô∏è Nieznany typ zadania: ${task.task_type}`);
                    }
                } catch (error) {
                    console.error(`\n‚ùå B≈ÇƒÖd podczas przetwarzania zadania:`, {
                        taskType: task.task_type,
                        taskTitle: task.task_title,
                        error: error.message,
                        fullError: error
                    });
                    throw error;
                }
            }
        } else {
            console.log('\n‚ö†Ô∏è Nieoczekiwany format analizy:', typeof analysis);
            console.log(JSON.stringify(analysis, null, 2));
        }
    } catch (error) {
        console.error('\n‚ùå B≈ÇƒÖd g≈Ç√≥wny:', error);
        throw error;
    }
}

module.exports = processContext;